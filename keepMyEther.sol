pragma solidity 0.4.11;

/*
Example contract which can receive Ether and the owner can later claim them back.
The contract exposes a recursive call vulnerability similar to those seen in TheDAO in 2016.
*/

contract keepMyEther {
    mapping(address => uint) public balances;
    
    function () payable {
        balances[msg.sender] += msg.value;
    }
    
    function getMyEther() {
        // the following line introduces the vulnerability
        // instead of address.call (which forwards all gas)
        // always use address.send!
        msg.sender.call.value(balances[msg.sender])();
        balances[msg.sender] = 0;
    }
    
    function getTotalBalance() constant returns (uint) {
        return this.balance;
    }
    
    function getMyAddress() constant returns (address) {
        return msg.sender;
    }
}
